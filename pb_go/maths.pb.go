// Code generated by protoc-gen-go. DO NOT EDIT.
// source: maths.proto

package maths

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MathRequest struct {
	Number1              float64  `protobuf:"fixed64,1,opt,name=Number1,proto3" json:"Number1,omitempty"`
	Number2              float64  `protobuf:"fixed64,2,opt,name=Number2,proto3" json:"Number2,omitempty"`
	Operation            string   `protobuf:"bytes,3,opt,name=Operation,proto3" json:"Operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathRequest) Reset()         { *m = MathRequest{} }
func (m *MathRequest) String() string { return proto.CompactTextString(m) }
func (*MathRequest) ProtoMessage()    {}
func (*MathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dd0d35fc9b01afa, []int{0}
}

func (m *MathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathRequest.Unmarshal(m, b)
}
func (m *MathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathRequest.Marshal(b, m, deterministic)
}
func (m *MathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathRequest.Merge(m, src)
}
func (m *MathRequest) XXX_Size() int {
	return xxx_messageInfo_MathRequest.Size(m)
}
func (m *MathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MathRequest proto.InternalMessageInfo

func (m *MathRequest) GetNumber1() float64 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *MathRequest) GetNumber2() float64 {
	if m != nil {
		return m.Number2
	}
	return 0
}

func (m *MathRequest) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

type MathResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathResponse) Reset()         { *m = MathResponse{} }
func (m *MathResponse) String() string { return proto.CompactTextString(m) }
func (*MathResponse) ProtoMessage()    {}
func (*MathResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dd0d35fc9b01afa, []int{1}
}

func (m *MathResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathResponse.Unmarshal(m, b)
}
func (m *MathResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathResponse.Marshal(b, m, deterministic)
}
func (m *MathResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathResponse.Merge(m, src)
}
func (m *MathResponse) XXX_Size() int {
	return xxx_messageInfo_MathResponse.Size(m)
}
func (m *MathResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MathResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MathResponse proto.InternalMessageInfo

func (m *MathResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*MathRequest)(nil), "maths.MathRequest")
	proto.RegisterType((*MathResponse)(nil), "maths.MathResponse")
}

func init() { proto.RegisterFile("maths.proto", fileDescriptor_0dd0d35fc9b01afa) }

var fileDescriptor_0dd0d35fc9b01afa = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x4d, 0x2c, 0xc9,
	0x28, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xe2, 0xb9, 0xb8, 0x7d,
	0x13, 0x4b, 0x32, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x24, 0xb8, 0xd8, 0xfd, 0x4a,
	0x73, 0x93, 0x52, 0x8b, 0x0c, 0x25, 0x18, 0x15, 0x18, 0x35, 0x18, 0x83, 0x60, 0x5c, 0x84, 0x8c,
	0x91, 0x04, 0x13, 0xb2, 0x8c, 0x91, 0x90, 0x0c, 0x17, 0xa7, 0x7f, 0x41, 0x6a, 0x51, 0x62, 0x49,
	0x66, 0x7e, 0x9e, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x42, 0x40, 0x49, 0x8d, 0x8b, 0x07,
	0x62, 0x41, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x18, 0x17, 0x5b, 0x50, 0x6a, 0x71, 0x69,
	0x4e, 0x09, 0xd4, 0x02, 0x28, 0xcf, 0xc8, 0x85, 0x8b, 0x15, 0xa4, 0xae, 0x58, 0xc8, 0x9a, 0x8b,
	0xc7, 0x25, 0x1f, 0xc4, 0x0c, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0x15, 0x12, 0xd2, 0x83, 0x38, 0x1b,
	0xc9, 0x99, 0x52, 0xc2, 0x28, 0x62, 0x10, 0x93, 0x35, 0x18, 0x0d, 0x18, 0x93, 0xd8, 0xc0, 0x9e,
	0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x00, 0xe1, 0x92, 0x20, 0xeb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathsClient is the client API for Maths service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathsClient interface {
	// rpc DoMath(MathRequest) returns (MathResponse);
	DoMathStream(ctx context.Context, opts ...grpc.CallOption) (Maths_DoMathStreamClient, error)
}

type mathsClient struct {
	cc *grpc.ClientConn
}

func NewMathsClient(cc *grpc.ClientConn) MathsClient {
	return &mathsClient{cc}
}

func (c *mathsClient) DoMathStream(ctx context.Context, opts ...grpc.CallOption) (Maths_DoMathStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Maths_serviceDesc.Streams[0], "/maths.Maths/DoMathStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathsDoMathStreamClient{stream}
	return x, nil
}

type Maths_DoMathStreamClient interface {
	Send(*MathRequest) error
	Recv() (*MathResponse, error)
	grpc.ClientStream
}

type mathsDoMathStreamClient struct {
	grpc.ClientStream
}

func (x *mathsDoMathStreamClient) Send(m *MathRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathsDoMathStreamClient) Recv() (*MathResponse, error) {
	m := new(MathResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MathsServer is the server API for Maths service.
type MathsServer interface {
	// rpc DoMath(MathRequest) returns (MathResponse);
	DoMathStream(Maths_DoMathStreamServer) error
}

func RegisterMathsServer(s *grpc.Server, srv MathsServer) {
	s.RegisterService(&_Maths_serviceDesc, srv)
}

func _Maths_DoMathStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathsServer).DoMathStream(&mathsDoMathStreamServer{stream})
}

type Maths_DoMathStreamServer interface {
	Send(*MathResponse) error
	Recv() (*MathRequest, error)
	grpc.ServerStream
}

type mathsDoMathStreamServer struct {
	grpc.ServerStream
}

func (x *mathsDoMathStreamServer) Send(m *MathResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathsDoMathStreamServer) Recv() (*MathRequest, error) {
	m := new(MathRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Maths_serviceDesc = grpc.ServiceDesc{
	ServiceName: "maths.Maths",
	HandlerType: (*MathsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DoMathStream",
			Handler:       _Maths_DoMathStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "maths.proto",
}
